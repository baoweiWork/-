<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStripList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolBtnReturn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAASCAYAAABB7B6eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAP7SURBVDhPhVVZbJRVFP67TgtUK8WQlIpF1NIHC9G6NMUl
        QlUQF3hQIkbj+mKisSkUQaWoxUAiL76IibjAg+BCsZKoGFONmEyLqcVQUFGjEVMJmFn+/Z+Zz/Ody53g
        g/FmTu7MvWf5zjnfueMEQQTf9xGGIYLAg+fl5bsvewDfixFHQKkAjKUnceWibizq6MJfU38jCouiH4kE
        Kvl8Xmxo76k/33dVHNf1ywqu6yKKIuRyOQkSi2eorLnvYThOPbquuwmzmuZgbd8GPffcSGwIxjhOkqTs
        K45D2bOQDATp2Qx8PxTEYimfoqD+/OAI6usa0DRzNr49PKHnFU4t1vc/p/e+l2iWBENbCzaOY2QyGd0d
        RiZyi7iQAKtW3os7VqwS1NXo7e2TNMwqFEqoqa7H5oEtqhuFQOAnasuSco+iRDNgIIrDyHohNR3adwBV
        lXVovfgyzGu9HD+f+E2dEglBcFVVpvDgA4/iqy/TOPnHaZSKcsikZWdPmEWSFLXUzMIhYqZ7S8/tqKxI
        4YXNL2sWNKIiA7AnNOaqcGowfVqjlK5RspmBuRfNx5bBbdi2dbva0JfpS6BBnJEv0qrcvqBD2HEGJVFi
        T3jJ8uXzLKH0KChofyaP/oTvjxzH++/t12YvaLtCSlmD6qp6nNcwE2Oj4+qDpWIQp6W5DU0XtJSjW4pZ
        yhoqCpWloZ4ba3YUWxrK4bEJjKbHce01izXDDz/4SM9Zfmf1PY8oBY9N/qKHRM05IM1yuYyioLh5CeQL
        grNOrSTCDc6K/U2GkRzHj53QOwnwkBykpKG/a6PjuKDNsTNB9EpDoSOFTs5FTyfMKApLej6waVB7eWRi
        Uu+1yYMvbdU6PvVk37+MczlX0ZuyCSdlLV1ym7LomfUD2D/0iZbO6jMT+ut9uh9zmlvVl0PEXH+ePIVL
        57ejLtWAj4c/xd49+9SILCKfWTo2j3OwsKNTmrtQMyewG29YgusX34zvxo+Wg104qxkHPxuBY58IpaFc
        bH/lVTWqrZkuTevG1NQpFAUJM2Aw1peDZjM99HUaPT23YvmyO3VGHn/sCS3brnf24v410l+is5S003zm
        dBbZjIerO7uknrXY9PyL5dkgHfvXPavfy02XxYn+5tCo3i9fdpeeXzKvnU+FGWnKuQ+eDbbjtZ1airkt
        bXh9x9toPH821q3dqHf2sWOPdHqFJGQbX4M97w6h86pu81QQvaUn+c9gDKSNFUfZTIiepSvEcBpStTPw
        1pu7DWrRo3PuBMrh4iz9+MOvOrwr717NAAbBf4kdNK7h4QMqXObONJ/AjL78p0ipCGrjhgEdvP8NYAhg
        ymeXeZtMliZj8ydDHZYpl5VBFUw739iFfwDaD5i1DtSwMgAAAABJRU5ErkJggg==
</value>
  </data>
</root>